import numpy as np

def get_input(prompt):
    return float(input(prompt))

def calculate_velocity_magnitude(vx, vy, vz):
    return np.sqrt(vx**2 + vy**2 + vz**2)

def calculate_moments_of_inertia(m, a):
    I = (1/6) * m * a**2
    return I, I, I

def main():
    num_points = int(get_input("Enter the number of reference points (1 to 5): "))
    if num_points < 1 or num_points > 5:
        print("Please enter a number between 1 and 5.")
        return
    
    ecef_velocities = []
    for i in range(num_points):
        print(f"\nReference point {i+1}:")
        vx = get_input("Enter ECEF velocity at x (m/s): ")
        vy = get_input("Enter ECEF velocity at y (m/s): ")
        vz = get_input("Enter ECEF velocity at z (m/s): ")
        ecef_velocities.append((vx, vy, vz))
    
    for i, (vx, vy, vz) in enumerate(ecef_velocities):
        velocity_magnitude = calculate_velocity_magnitude(vx, vy, vz)
        orbital_velocity_kms = velocity_magnitude / 1000  # Convert to km/s
        print(f"Calculated orbital velocity for reference point {i+1}: {orbital_velocity_kms:.5f} km/s")
    
    # 1U CubeSat dimensions and mass
    m = 1.0  # kg
    a = 0.1  # m (10 cm)

    Ixx, Iyy, Izz = calculate_moments_of_inertia(m, a)
    Ixy = Ixz = Iyz = 0  # Assuming zero for simplicity

    print("\nMoment of Inertia Matrix:")
    inertia_matrix = np.array([
        [Ixx, Ixy, Ixz],
        [Ixy, Iyy, Iyz],
        [Ixz, Iyz, Izz]
    ])
    print(inertia_matrix)

if __name__ == "__main__":
    main()
